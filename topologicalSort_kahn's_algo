#include <bits/stdc++.h>

using namespace std;

vector<int> topologicalSort(int node, unordered_map<int, list<int>> &adjList, vector<int> indegree)
{
    queue<int> q;
    
    // 0 indegree push
    for(int i = 0; i < indegree.size(); i++)
    {
        if(indegree[i] == 0)
        {
            q.push(i);
        }
    }
    vector<int> ans;
    
    // bfs
    while(!q.empty())
    {
        int front = q.front();
        q.pop();
        
        ans.push_back(front);
        
        for(auto i : adjList[front])
        {
            indegree[i]--;
            if(indegree[i] == 0)
            {
                q.push(i);
            }
        }
    }
    
    return ans;
}

int main() {
    int n, m;
    cin >> n >> m;
    unordered_map<int, list<int>> adjList;
    
    for(int i = 0; i < m; i++)
    {
        int a,b;
        cin >> a >> b;
        adjList[a].push_back(b);
    }
    
    // find all indegrees
    vector<int> indegree(n+1);
    indegree[0] = -1;
    for(auto i : adjList)
    {
        for(auto j : i.second)
        {
            indegree[j]++;
        }
    }
    
    vector<int> ans =  topologicalSort(1, adjList, indegree);

    for(auto i : ans) cout << i << " ";
    return 0;
}

// 5 5
// 1 2
// 1 3
// 2 5
// 3 5
// 5 4


